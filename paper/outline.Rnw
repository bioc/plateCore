\documentclass[12pt]{article}

\usepackage{amsmath}
\usepackage[authoryear,round]{natbib}
\usepackage{hyperref}

\SweaveOpts{keep.source=TRUE}

\textwidth=6.2in
\textheight=8.5in
\oddsidemargin=.1in
\evensidemargin=.1in
\headheight=-.3in

\newcommand{\scscst}{\scriptscriptstyle}
\newcommand{\scst}{\scriptstyle}
\newcommand{\Rfunction}[1]{{\texttt{#1()}}}
\newcommand{\Rmethod}[1]{{\texttt{#1}}}  
\newcommand{\Rclass}[1]{{\texttt{#1}}}
\newcommand{\Robject}[1]{{\texttt{#1}}}
\newcommand{\Rpackage}[1]{{\textit{#1}}}
\newcommand{\code}[1]{{\texttt{#1}}}
\bibliographystyle{plainnat}

\title{Outline: Analysis of High Throughput Flow Cytometry Data using \Rpackage{plateCore}}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{document}
\maketitle

\section*{Abstract}
\Rpackage{plateCore} is a Bioconductor packaged created to make processing and analysis of large, complex flow datasets
in R easier. High throughput flow studies are often run in a 96 or 384-well plate format, with a number of different samples, 
controls, and antibodies-dye conjugates present on the plate. Analyzing the output from the cytometer requires keeping track of the contents
of each well, matching sample wells with control wells, gating each well/channel separately, making the appropriate plots, quality assessment, and
summarizing the results. \Rpackage{plateCore} extends the \Rpackage{flowCore} and \Rpackage{flowViz} packages to work on
\Rclass{flowPlate} objects that represent these large flow datasets. For those familiar with \Rpackage{flowCore} and \Rpackage{flowViz}, 
the gating (filtering), transformation, and other data manipulations for \Rclass{flowPlates} are very similar to \Rclass{flowSets}. 

In this document we show how setup a \Rpackage{plateCore} analysis and provide examples for one(?) publicly available dataset(s). 
(add description of data and results).


%\section*{Recent Related Publications}
%\subsection*{flowCore manuscript in Cytometry A}
%Gives an overview of flowCore data structures, transformation and gating examples, quality control checks (flowQ), and 
%flowCore analysis philosophy.
%. 
%\subsection*{Using flowViz to Visualize Flow Cytometry Data, Bioinformatics}
%Uses flowViz to make xyplots, ecdfplots, and time plots of GvHD data. Makes the case that visualizations can be used to aid automation.
%
%\subsection*{Quality Assessment of Ungated Flow Cytometry data in High Throughput experiments, Cytometry A, GvHD data}
%Visualizing data: xyplots, histograms, ecdfplots, boxplots, and contour plots.\\
%Outlier detection (Grubbs and KS)\\
%Using flowViz/Core graphical output for quality assessment\\
%
%\subsection*{Analysis of flow cytometry data using an automatic processing tool, Cytometry Part A}
%Automated analysis in Matlab.
%
%\section*{Data}
%FACS CAP PBMC Data (currently on ficcs.org, but it is not clear if we will be able to release AB names)\\
%GvHD Data\\


\section*{Introduction}
Analysis of flow cytometry high content screening (FC-HCS) experiments requires a systematic approach to
preprocessing, gating (i.e., filtering), and summarizing large amounts of data. Ideally these steps would be automated,
allowing analysis pipelines to be robust, objective, and match the high-throughput capacity of modern cytometers. 
Unfortunately, current approaches to FC-HCS analysis methods are semi-automated at best,
often requiring significant manual intervention to identify cells of interest and set the appropriate gates. 
Since the manual contribution is subjective and prone to error when working with large numbers of samples, it
is desirable to develop programmatic approaches to process the data.

Flow cytometry packages available through the Bioconductor project provide an open analysis platform that
can be used by cytometrists, bioinformaticians, and statisticians to develop new analysis approaches that
enable automated processing. The \Rpackage{flowCore} package contains the framework for importing, transforming, gating, and
organizing raw flow cytometry data. \Rpackage{flowViz} supports sophisticated visualizations based on Trellis displays. 
\Rpackage{flowClust} implements model-based clustering approaches for automated gating. The combination of
these packages provides a set of freely available, flexible, and computationally efficient FC-HCS tools.

Add paragraph on \Rpackage{plateCore}.


\begin{figure}
\centering
\includegraphics{analysisSteps}
\caption{plateCore analysis.}
\end{figure}
 

\section*{Example Data}

\section*{Data import, compensation, and QC}

\section*{Results}


\end{document}
