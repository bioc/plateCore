\documentclass[12pt]{article}

\usepackage{amsmath}
\usepackage[authoryear,round]{natbib}
%\usepackage{hyperref}

\SweaveOpts{keep.source=TRUE}

\textwidth=6.2in
\textheight=8.5in
\oddsidemargin=.1in
\evensidemargin=.1in
\headheight=-.3in

\newcommand{\scscst}{\scriptscriptstyle}
\newcommand{\scst}{\scriptstyle}
\newcommand{\Rfunction}[1]{{\texttt{#1()}}}
\newcommand{\Rmethod}[1]{{\texttt{#1}}}  
\newcommand{\Rclass}[1]{{\texttt{#1}}}
\newcommand{\Robject}[1]{{\texttt{#1}}}
\newcommand{\Rpackage}[1]{{\textit{#1}}}
\newcommand{\code}[1]{{\texttt{#1}}}
\bibliographystyle{plainnat}

\title{Analysis of High Throughput Flow Cytometry Data using \Rpackage{plateCore}}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{document}
\maketitle

\clearpage
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section*{Abstract}
\subsection*{Background}
High throughput flow studies are often run in a 96 or 384-well plate format, with a number of different samples, 
controls, and antibodies-dye conjugates present on each plate. 
Analyzing a plate requires tracking the contents
of each well, matching sample wells with control wells, gating each well/channel separately, making the appropriate plots,
assessing quality, and finally aggregating the results from multiple plates into an experiment level data object. 
This analysis can be a monumental task using traditional point-and-click software packages, even when multiple instances are
deployed. We developed \Rpackage{plateCore} as an R/Bioconductor packaged to make processing and analysis of large, complex flow cytometry (FCM) datasets
easier. 

\subsection*{Methods}
\Rpackage{plateCore} was used to analyze the results from a BD FACS\texttrademark CAP screening experiment where 5 PBMC samples 
were assayed for 189 different human cell surface markers. 
This same dataset was also analyzed by a cytometry expert using FlowJo\texttrademark.

\subsection*{Results}
Positive markers identified using \Rpackage{plateCore} are in good agreement with those found using FlowJo\texttrademark analysis.

\subsection*{Conclusions}
\Rpackage{plateCore} provides a reproducible, objective platform for analyzing high throughput flow experiments. The R/Bioconductor 
implementation allows bioinformaticians and statisticians access to the data, which should further the development of automated
analysis methods.

\clearpage
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section*{Introduction}

While there are a number of different software packages available for analysis of flow cytometry data, these programs are often
ill-suited to the development of new methods needed for analyzing high-throughput flow studies.
Flow Cytometry High Content Screening (FC-HCS) experiments generate large volumes of data, and a systematic approach to
preprocessing, gating (i.e. filtering), and summarizing results is needed for robust analyses. 
Ideally these steps would be automated,
allowing analysis pipelines to be robust, objective, and match the high-throughput capacity of modern cytometers. 
Unfortunately, current approaches to FC-HCS analysis are semi-automated at best,
often requiring significant manual intervention to identify cells of interest and set the appropriate gates. 
Since the manual contribution is subjective and prone to error when working with large numbers of samples \citep{Maecker2005},
it is desirable to develop programmatic approaches to process the data.

Flow cytometry packages available through the Bioconductor \citep{BIOC} project provide an open platform that
can be used by cytometrists, bioinformaticians, and statisticians to collaboratively develop new methods for
automated FC-HCS analysis.  The basic data processing tools for importing, transforming, gating, and
organizing raw flow cytometry data are in the \Rpackage{flowCore} package \citep{hahne2009}, and the visualization functions are
in \Rpackage{flowViz} \citep{sarkar2008ufv}. The Bioconductor model for flow data analysis facilitates
the development of new analysis methods, since the overhead associated with
accessing and visualizing flow data is handled by \Rpackage{flowCore} and \Rpackage{flowViz}.
The availability of \Rpackage{flowCore} and \Rpackage{flowViz} has enabled the creation of new tools for
quality assessment of large flow experiments (\Rpackage{flowQ} \citep{}) and model-based clustering and automated gating
(\Rpackage{flowClust} \cite{lo2008agf}).
\Rpackage{plateCore} also takes advantage of the functionality in \Rpackage{flowCore} and \Rpackage{flowViz}
to create methods and data structures for processing large, plate-based flow datasets.  

An example of the progression from raw FCM data files to a completed \Rpackage{plateCore} analysis is shown in Figure~\ref{fig:analysis}.
List mode FCS files for a single plate are read into a \Robject{flowSet} using \Rpackage{flowCore}, and then a \Robject{flowPlate} is created by integrating
the plate annotation file with the \Robject{flowSet}. The \Robject{flowPlate} is then compensated, data quality is assessed, and gates
are set according to a negative control. These control gates are then applied to test wells to find cells that have specific staining
in channels of interest. While this same analysis can be performed relatively quickly in 
other flow cytometry software packages, it can be difficult to reproduce the gating decisions made by a single expert user.

In addition to subjective gating, the lack of a standard format for describing large flow experiments also
makes it difficult for anyone other than the original experimenter to replicate an analysis. 
The adoption of ACS specifications (ref?) should make it easier to access metadata in future flow studies, but currently
this information is typically provided either as spreadsheet or a pictorial layout of a 96 well plate. 
Since the creation of \Robject{flowPlate} requires users to make a standard sample annotation file, plate layouts from \Rpackage{plateCore}
can then be easily shared along with the raw FCS2.0/3.0 files. 
The standard format for \Rpackage{plateCore} sample annotations provides a convenient way to manage the plate metadata
associated with complex FC-HCS experiments.

\Rpackage{plateCore} is not designed to be a GUI driven end-user tool, but rather to help develop a standardized platform for the analysis of FC-HCS data.
These analyses often represent a collaborative effort between cytometry experts who generate the data and the quantitative individuals who help
deal with the large volume information. In order for this collaboration to work, the cytometrists must have confidence in the
results of the automated analysis. To this point, we demonstrate the equality of our results to those produced by an expert
cytometrist using FlowJo\texttrademark.


\begin{figure}
\centering
\includegraphics[width=7in,height=6in]{analysisSteps.pdf}
\caption{Typical plateCore workflow on the left, and examples of each step from a sample analysis are shown on the right.
Generating reports and plots is a multi-step that typically involves merging output from several plates, and the required
code is not shown here.
If necessary, the threshold control gates created automatically from \Rfunction{setControlGates} are adjusted based on input from flow experts. 
These new gates are established based on the gap between negative and positive test samples, whereas the automated
control gates were set using only negative control wells.}
\label{fig:analysis}
\end{figure}
 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\clearpage
\section*{Materials and Methods}
\subsection*{Data}

The peripheral blood mononucleocyte (PBMC) data used in this study consists of 5 samples that were analyzed on 96-well plates
using BD FACS\texttrademark CAP (ref ?). On each plate, there are 189 different human cell surface antibody-dye conjugates that
are arrayed 3 per well (63 test wells), along with 30 isotype control wells and 3 unstained controls.
Test antibodies and isotypes are arrayed 3 per well, and the data was compensated
on the cytometer (BD FACSCalibur\texttrademark). The 189 antibodies were selected to provide a broad expression profile
for a large number of cell surface markers, including 103 proteins with GO annotation for receptor activity, 80
for immune response, and 55 for signal transduction. The raw data is available for download from http://www.ficcs.org in the
plateData.tar.gz file. 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsection*{Analysis}

The goal of the PBMC FACS\texttrademark CAP study was to look for positive staining for the 189 different cell
surface markers in lymphocytes. The \Rpackage{plateCore} scripts used to perform the analysis are provided 
in supplementary materials. Briefly, the FCM files are first processed using a combination of static (\Robject{rectangleGate})
and data driven (\Robject{norm2filter}) \Rpackage{flowCore} gates to pick out the lymphocytes in the forward (FSC) and side scatter (SSC)
channels.  The quality of the data was then assessed by looking for fluidic events such as bubbles,
pressure drops, or large aggregates that can shift the baseline fluorescence readings. 
Fluidic events can often be identified by plotting the emprical cumulative density (ecdf) plots of FSC
values for each well, and looking for distributions shifted relative to other wells \citep{lemeur2007}. Based on the ecdf
plots, several wells were further investigated by cytometry experts who determined that the shifts were in an acceptable range.
Next the threshold between positive and negative cells are determined using the isoytpe controls, which provide a gross estimate
of non-specific binding in the primary antibodies. One-dimensional gates are created using using the isotype thresholds, and these
gates are applied to identify cells that are positively stained for each marker. 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\clearpage
\section*{Results}
\subsection*{\Rpackage{plateCore}}
The 5 PBMC plates were analyzed using the approach shown in Figure~\ref{fig:analysis}.  Results
are stored in \Robject{flowPlates}, which are data structures that contain a description of the
plate layout, morphology gated (FSC-SSC) events, and parameters values for the 
the negative control gates (i.e. isotype gates). Event level data can be 
visualized using plotting functions from \Rpackage{plateCore} and \Rpackage{flowViz}. 
Additionally, results from different plates can be aggregated, making it easier to compare
results from different plates and to create the complex reports required to summarize results from 
189 different markers.

Eighty-three of the 189 markers were positive on at least one plate, and these markers are 
shown in Figure~\ref{fig:pbmcHeat}. Positive for BD FACS CAP was defined as having more than 10\% of
events above the isotype gate. Since antibody concentrations used in BD FACS CAP were designed
to screen a number of different cell types, the concentrations are not necessarily optimal for these PBMC samples. 
The 10\% cutoff is an empirically determined threshold (data not shown) used to select markers for further analysis,
including single color titration and competition experiments to confirm that the marker is present
and staining is specific. Markers that are highly positive ($\ge$ 90\%) are usually confirmed in
follow-up studies, while markers that are low positives ($\le$ 15\%) are often the result of non-specific
staining. Also, these percentages refer to the fraction of events above the isotype threshold, but
this does not necessarily imply staining is heterogeneous.

One common goal for a BD FACS CAP screen is to identify markers that show variation in expression
between different donors. The power to detect differences in this study is limited since there are
only 2 donors and the level of replication is low (2-3 plates per donor). Figure~\ref{fig:donorVar} shows 
the expected and observed variation in the percentage of positively stained cells for the
83 positive ($\ge$ 10\%) markers. Histograms produced using \Rpackage{plateCore} are shown in Figure~\ref{fig:pbmcCDbd69}
are shown for a selected marker with a high relatively level of variation.

\begin{figure}
\centering
<<label=pbmcHeat,fig=TRUE,echo=FALSE>>=
library(gplots)
temp <- read.delim("ppExp.csv",stringsAsFactors=FALSE,header=TRUE)
#temp <- read.delim("paper/ppExp.csv",stringsAsFactors=FALSE,header=TRUE)
rownames(temp) <- temp[,1]
temp <- temp[,-1]

mapcol <- rev(heat.colors(10))
b <- seq(0,100,by=10)
#heatmap.2(as.matrix(temp),col=mapcol,breaks=b,scale='none',trace='none',cexRow=0.3)
heatmap.2(as.matrix(temp),col=redgreen(10),breaks=b,scale='none',trace='none',cexRow=0.3)
@
\caption{Heatmap showing the percentage of positive cells from the 5 different PBMC lymphocyte plates. Only the 83 markers
that had $\ge$ 10\% positive cells are shown here.}
\label{fig:pbmcHeat}
\end{figure}

\begin{figure}
\centering
<<label=donorVar,fig=TRUE,echo=FALSE>>=

temp <- read.delim("ppExp.csv",stringsAsFactors=FALSE,header=TRUE)

perPos <- seq(0.01,0.99,0.01)
predVar <- sqrt((perPos*(1-perPos))/5)

markSDs <- apply(temp[,2:6],1,sd)
markMs <- rowMeans(temp[,2:6])
plot(markMs,markSDs,xlim=c(0,100),ylim=c(0,25),xlab="Mean % Positive",ylab="Standard Deviation")
lines(100*perPos,100*predVar)
text(markMs[markSDs>20],markSDs[markSDs>20]+1,temp[markSDs>20,1])

@
\caption{Scatterplot showing the mean percentage of positive cells for the 5 PMBC plates
versus the observed (circles) and expected (line) standard deviation.}
\label{fig:donorVar}
\end{figure}





\begin{figure}
\centering
<<label=pbmcCDbd69,fig=TRUE,echo=FALSE>>=
library(plateCore)
fileNames <- list.files("../../publicationPlateCore/pbmcRData",full.names=TRUE)

plates <- lapply(fileNames,function(x){
			load(x)
			platePBMC[c("A03","B06")]
		})

virtPlate <- fpbind(plates[[1]],plates[[2]],plates[[3]],plates[[4]],plates[[5]])


print(densityplot(~ `FL2-H` | as.factor(plateName), transform("FL2-H"=log10) %on% virtPlate,filterResult="Negative.Control"))

@
\caption{Dotplots for CDbd69, which is differentially expressed between the 5 PBMC plates. Isotypes are shown in green and
test wells are in magenta.}
\label{fig:pbmcCDbd69}
\end{figure}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\clearpage
\subsection*{Comparison to Manual Analysis}

The 5 pmbc plates were also analyzed using FlowJo$^{\text{TM}}$, which is one of the standard FCM data analysis platforms.
BD FACS$^{\text{TM}}$ CAP is designed as a screening tool to help identify markers for additional analysis. Since it is 
not practical to have controls specific to each of the 189 antibody-dye conjugates, isotypes were chosen according to the
most common antibody subtypes. Cytometry experts initially set gates according to the isotype controls, and then move the
gates based on positive and negative test samples. Figure~\ref{fig:pcVSman} shows how the results from FlowJo$^{\text{TM}}$ compare to \Rpackage{plateCore}.

\begin{figure}
\centering
<<label=pcVSman,fig=TRUE,echo=FALSE>>=

load(fileNames[[1]])

wellDf <- subset(wellAnnotation(platePBMC),Sample.Type=="Test")

tempY <- jitter(as.numeric(wellDf$Percent.Positive),factor=10000)
tempY[tempY>100]=100
tempY[tempY<0]=0

plot(wellDf$Percent.Positive,tempY,xlab="plateCore Results",ylab="Manual Analysis")
abline(0,1,col='red')
@
\caption{Percent positive results for 189 markers analyzed using either \Rpackage{plateCore} or manually using FlowJo$^{\text{TM}}$. (Note: Need to get real
data in this plot)}
\label{fig:pcVSman}
\end{figure}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\clearpage
\section*{Discussion}

The PBMC example shows that a complex analysis of a 96-well plate, stained with 189 antibodies,
can be constructed in 15-20 lines of code using \Rpackage{plateCore}. Lymphocytes were selected
using \Rpackage{flowCore} gates and visualized using \Rpackage{flowViz} plots. One-dimensional 
gates were constructed using isotype wells and applied to the test wells to identify positive cells.

Given a \textit{plate configuration} file, this same approach can be used to analyze any
negative control based FC-HCS study. Although adjustments to the automatically generated negative control gates may be needed,
these changes change be incorporated into the analysis script and reproduced at a later time.

(Need some additional paragraphs about why plateCore is wonderful).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\clearpage
\bibliographystyle{plain}
\bibliography{outline} 

\end{document}
